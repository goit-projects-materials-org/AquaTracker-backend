{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Aqua Tracker",
    "description": "Aqua Tracker backend"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:6003/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User sign up",
        "requestBody": {
          "description": "Sign up object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Service not found",
            "content": {}
          },
          "409": {
            "description": "Such email already exists",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User sign in",
        "requestBody": {
          "description": "Sign in object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password invalid",
            "content": {}
          },
          "404": {
            "description": "Service not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user info",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/current/edit": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Edit current user info",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Edit user object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User name",
                    "type": "string",
                    "format": "json",
                    "example": "Test name"
                  },
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "format": "json",
                    "example": "test@gmail.com"
                  },
                  "gender": {
                    "description": "User gender",
                    "type": "string",
                    "enum": ["female", "male"],
                    "format": "json",
                    "example": "test@gmail.com"
                  },
                  "weight": {
                    "description": "User weight",
                    "type": "number",
                    "min": 30,
                    "max": 300,
                    "format": "json",
                    "example": 60
                  },
                  "activeTime": {
                    "description": "User active time",
                    "type": "number",
                    "min": 0.1,
                    "max": 24,
                    "format": "json",
                    "example": 2
                  },
                  "waterDailyNorma": {
                    "description": "User water daily norma",
                    "type": "number",
                    "min": 0.1,
                    "max": 5000,
                    "format": "json",
                    "example": 2000
                  },
                  "date": {
                    "description": "Date",
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-04-28T17:42:21.903Z"
                  },
                  "avatar": {
                    "description": "Avatar file",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found",
            "content": {}
          },
          "409": {
            "description": "Such email already exists",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/current/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get fresh token and refreshToken for the current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRefreshCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User sign out",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignOutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/add": {
      "post": {
        "tags": ["Water"],
        "summary": "Add water",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add water object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/edit/{id}": {
      "patch": {
        "tags": ["Water"],
        "summary": "Edit the water dose",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Water dose id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Edit water object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found or Info about this consumed water dose not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/remove/{id}": {
      "delete": {
        "tags": ["Water"],
        "summary": "Remove the water dose",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Water dose id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found or Info about this consumed water dose not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/day/{date}": {
      "get": {
        "tags": ["Water"],
        "summary": "Info about consumed water for day",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "description": "Date of consumption in ISO 8601 format",
            "schema": {
              "type": "string",
              "format": "date-time",
              "default": "2024-04-28T17:42:21.903Z"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDayWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found or Info for date not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/month/{date}": {
      "get": {
        "tags": ["Water"],
        "summary": "Info about consumed water for month",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "description": "Date of consumption in ISO 8601 format",
            "schema": {
              "type": "string",
              "format": "date-time",
              "default": "2024-04-28T17:42:21.903Z"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMonthWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Service not found or Info for date not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email as a string with a valid email address format",
            "example": "test@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User password as a string which consists of 7 symbols",
            "example": "1234567"
          }
        }
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "test"
          },
          "avatarURL": {
            "type": "null",
            "description": "User avatarURL",
            "example": null
          },
          "gender": {
            "type": "null",
            "description": "User gender",
            "example": null
          },
          "weight": {
            "type": "null",
            "description": "User weight",
            "example": null
          },
          "activeTime": {
            "type": "null",
            "description": "User active time",
            "example": null
          },
          "waterDailyNorma": {
            "type": "number",
            "description": "User water daily norma",
            "example": 2000
          },
          "token": {
            "type": "string",
            "description": "User token(1h)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YjFlMjVmNmIwYTJjY2I5NTU5MWVjNyIsImlhdCI6MTY4OTM3OTQyMywiZXhwIjoxNjg5NDYyMjIzfQ.hT2Ta6pBhDR1vOF7LjcKxofyASDPjcTZtFi9CESKIuA"
          },
          "refreshToken": {
            "type": "string",
            "description": "User refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWQyZWRkMTEwYjBiOGRlZjQ4MTY1ZiIsImlhdCI6MTcwNTg0ODg3NSwiZXhwIjoxNzA2NDUzNjc1fQ.MONgGZKIUzqvq13OAlJvBctxJl1rt5OXMFQeIiZm2Ag"
          }
        },
        "example": {
          "email": "test5@gmail.com",
          "name": "test5",
          "avatarURL": null,
          "gender": null,
          "weight": null,
          "activeTime": null,
          "waterDailyNorma": 2000,
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzMzA3NzA4fQ.qAPRcgNKwuNnRKQfuKed5586WCc0JLJyRoP0M8-g0lE",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzOTA4OTA4fQ.kcIfr-q08RwBZgFe-2l48TAbITfCnLpSFR2qp3pei0A"
        }
      },
      "SignInRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email as a string with a valid email address format",
            "example": "test@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User password as a string which consists of 7 symbols",
            "example": "1234567"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "test"
          },
          "avatarURL": {
            "type": "string",
            "description": "User avatarURL",
            "example": "https://res.cloudinary.com/drfvfno3o/image/upload/v1713304877/avatars/661cfcf810f883d8229047b1.jpg"
          },
          "gender": {
            "type": "string",
            "description": "User gender",
            "example": "female"
          },
          "weight": {
            "type": "number",
            "description": "User weight",
            "example": 60
          },
          "activeTime": {
            "type": "number",
            "description": "User active time",
            "example": 2
          },
          "waterDailyNorma": {
            "type": "number",
            "description": "User water daily norma",
            "example": 3000
          },
          "token": {
            "type": "string",
            "description": "User token(1h)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YjFlMjVmNmIwYTJjY2I5NTU5MWVjNyIsImlhdCI6MTY4OTM3OTQyMywiZXhwIjoxNjg5NDYyMjIzfQ.hT2Ta6pBhDR1vOF7LjcKxofyASDPjcTZtFi9CESKIuA"
          },
          "refreshToken": {
            "type": "string",
            "description": "User refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWQyZWRkMTEwYjBiOGRlZjQ4MTY1ZiIsImlhdCI6MTcwNTg0ODg3NSwiZXhwIjoxNzA2NDUzNjc1fQ.MONgGZKIUzqvq13OAlJvBctxJl1rt5OXMFQeIiZm2Ag"
          }
        },
        "example": {
          "email": "test5@gmail.com",
          "name": "test5",
          "avatarURL": "https://res.cloudinary.com/drfvfno3o/image/upload/v1713304877/avatars/661cfcf810f883d8229047b1.jpg",
          "gender": "female",
          "weight": 60,
          "activeTime": 2,
          "waterDailyNorma": 3000,
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzMzA3NzA4fQ.qAPRcgNKwuNnRKQfuKed5586WCc0JLJyRoP0M8-g0lE",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzOTA4OTA4fQ.kcIfr-q08RwBZgFe-2l48TAbITfCnLpSFR2qp3pei0A"
        }
      },
      "GetCurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@gmail.com"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "description": "User name",
                "example": "test"
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "avatarURL": {
            "anyOf": [
              {
                "type": "string",
                "description": "User avatarURL",
                "example": "https://res.cloudinary.com/drfvfno3o/image/upload/v1713304877/avatars/661cfcf810f883d8229047b1.jpg"
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "gender": {
            "anyOf": [
              {
                "type": "string",
                "description": "User gender",
                "example": "female"
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "weight": {
            "anyOf": [
              {
                "type": "number",
                "description": "User weight",
                "example": 60
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "activeTime": {
            "anyOf": [
              {
                "type": "number",
                "description": "User active time",
                "example": 2
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "waterDailyNorma": {
            "type": "number",
            "description": "User water daily norma",
            "example": 3000
          },
          "token": {
            "type": "string",
            "description": "User token(1h)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YjFlMjVmNmIwYTJjY2I5NTU5MWVjNyIsImlhdCI6MTY4OTM3OTQyMywiZXhwIjoxNjg5NDYyMjIzfQ.hT2Ta6pBhDR1vOF7LjcKxofyASDPjcTZtFi9CESKIuA"
          },
          "refreshToken": {
            "type": "string",
            "description": "User refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWQyZWRkMTEwYjBiOGRlZjQ4MTY1ZiIsImlhdCI6MTcwNTg0ODg3NSwiZXhwIjoxNzA2NDUzNjc1fQ.MONgGZKIUzqvq13OAlJvBctxJl1rt5OXMFQeIiZm2Ag"
          }
        },
        "example": {
          "email": "test5@gmail.com",
          "name": "test5",
          "avatarURL": "https://res.cloudinary.com/drfvfno3o/image/upload/v1713304877/avatars/661cfcf810f883d8229047b1.jpg",
          "gender": "female",
          "weight": 60,
          "activeTime": 2,
          "waterDailyNorma": 3000,
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzMzA3NzA4fQ.qAPRcgNKwuNnRKQfuKed5586WCc0JLJyRoP0M8-g0lE",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzOTA4OTA4fQ.kcIfr-q08RwBZgFe-2l48TAbITfCnLpSFR2qp3pei0A"
        }
      },
      "GetRefreshCurrentResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User token(1h)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YjFlMjVmNmIwYTJjY2I5NTU5MWVjNyIsImlhdCI6MTY4OTM3OTQyMywiZXhwIjoxNjg5NDYyMjIzfQ.hT2Ta6pBhDR1vOF7LjcKxofyASDPjcTZtFi9CESKIuA"
          },
          "refreshToken": {
            "type": "string",
            "description": "User refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWQyZWRkMTEwYjBiOGRlZjQ4MTY1ZiIsImlhdCI6MTcwNTg0ODg3NSwiZXhwIjoxNzA2NDUzNjc1fQ.MONgGZKIUzqvq13OAlJvBctxJl1rt5OXMFQeIiZm2Ag"
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YjFlMjVmNmIwYTJjY2I5NTU5MWVjNyIsImlhdCI6MTY4OTM3OTQyMywiZXhwIjoxNjg5NDYyMjIzfQ.hT2Ta6pBhDR1vOF7LjcKxofyASDPjcTZtFi9CESKIuA",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWQyZWRkMTEwYjBiOGRlZjQ4MTY1ZiIsImlhdCI6MTcwNTg0ODg3NSwiZXhwIjoxNzA2NDUzNjc1fQ.MONgGZKIUzqvq13OAlJvBctxJl1rt5OXMFQeIiZm2Ag"
        }
      },
      "EditUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "test"
          },
          "gender": {
            "type": "string",
            "description": "User gender",
            "example": "female"
          },
          "weight": {
            "type": "number",
            "description": "User weight",
            "example": 60
          },
          "activeTime": {
            "type": "number",
            "description": "User active time",
            "example": 2
          },
          "waterDailyNorma": {
            "type": "number",
            "description": "User water daily norma",
            "example": 3000
          }
        },
        "example": {
          "email": "test5@gmail.com",
          "name": "test5",
          "avatarURL": "https://res.cloudinary.com/drfvfno3o/image/upload/v1713304877/avatars/661cfcf810f883d8229047b1.jpg",
          "gender": "female",
          "weight": 60,
          "activeTime": 2,
          "waterDailyNorma": 3000
        }
      },
      "EditUserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@gmail.com"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "description": "User name",
                "example": "test"
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "avatarURL": {
            "anyOf": [
              {
                "type": "string",
                "description": "User avatarURL",
                "example": "https://res.cloudinary.com/drfvfno3o/image/upload/v1713304877/avatars/661cfcf810f883d8229047b1.jpg"
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "gender": {
            "anyOf": [
              {
                "type": "string",
                "description": "User gender",
                "example": "female"
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "weight": {
            "anyOf": [
              {
                "type": "number",
                "description": "User weight",
                "example": 60
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "activeTime": {
            "anyOf": [
              {
                "type": "number",
                "description": "User active time",
                "example": 2
              },
              {
                "type": "null",
                "example": null
              }
            ]
          },
          "waterDailyNorma": {
            "type": "number",
            "description": "User water daily norma",
            "example": 3000
          }
        },
        "example": {
          "email": "test5@gmail.com",
          "name": "test5",
          "avatarURL": "https://res.cloudinary.com/drfvfno3o/image/upload/v1713304877/avatars/661cfcf810f883d8229047b1.jpg",
          "gender": "female",
          "weight": 60,
          "activeTime": 2,
          "waterDailyNorma": 3000,
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzMzA3NzA4fQ.qAPRcgNKwuNnRKQfuKed5586WCc0JLJyRoP0M8-g0lE",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWVmMjJjOTYwNGMxYTEwN2E0NGE3OSIsImlhdCI6MTcxMzMwNDEwOCwiZXhwIjoxNzEzOTA4OTA4fQ.kcIfr-q08RwBZgFe-2l48TAbITfCnLpSFR2qp3pei0A"
        }
      },
      "SignOutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Sign out success",
            "example": "Sign out success"
          }
        },
        "example": {
          "message": "Sign out success"
        }
      },
      "AddWaterRequest": {
        "type": "object",
        "required": ["amount", "date"],
        "properties": {
          "amount": {
            "description": "Water amount",
            "type": "number",
            "format": "json",
            "example": 250
          },
          "date": {
            "description": "Date",
            "type": "string",
            "format": "date-time",
            "example": "2024-04-28T17:42:21.903Z"
          }
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Water day id",
            "example": "662e90cc4221a6bcc4508e63"
          },
          "date": {
            "description": "Date",
            "type": "string",
            "format": "date-time",
            "example": "2024-04-28T17:42:21.903Z"
          },
          "waterDailyNorma": {
            "type": "number",
            "description": "Water daily norma for user",
            "example": 2500
          },
          "amount": {
            "type": "number",
            "description": "Consumed amount of water",
            "example": 250
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "662e8d7ca65df5fa1d92229e"
          }
        },
        "example": {
          "_id": "662e90cc4221a6bcc4508e63",
          "date": "2024-04-28T17:42:21.903Z",
          "amount": 250,
          "waterDailyNorma": 2500,
          "owner": "662e8d7ca65df5fa1d92229e"
        }
      },
      "GetDayWaterResponse": {
        "type": "object",
        "properties": {
          "date": {
            "description": "Date",
            "type": "string",
            "format": "date-time",
            "example": "2024-04-28T17:42:21.903Z"
          },
          "consumedAmountWater": {
            "type": "number",
            "description": "Amount of consumed water for this day",
            "example": 2500
          },
          "waterDailyNorma": {
            "type": "number",
            "description": "Water daily norma for user",
            "example": 2500
          },
          "consumedWaterDoses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Id of consumed water notice",
                  "example": "662e93159f74e6c3f7e61fbb"
                },
                "date": {
                  "description": "Date",
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-04-28T17:42:21.903Z"
                },
                "waterDailyNorma": {
                  "type": "number",
                  "description": "Water daily norma for user",
                  "example": 2500
                },
                "amount": {
                  "type": "number",
                  "description": "Amount of consumed water notice",
                  "example": 250
                },
                "owner": {
                  "type": "string",
                  "description": "User id",
                  "example": "662e8d7ca65df5fa1d92229e"
                }
              }
            }
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "662e8d7ca65df5fa1d92229e"
          }
        },
        "example": {
          "date": "2024-04-28T19:42:21.903Z",
          "consumedAmountWater": 250,
          "waterDailyNorma": 2000,
          "consumedWaterDoses": [
            {
              "_id": "662e93159f74e6c3f7e61fbb",
              "date": "2024-04-28T21:42:21.903Z",
              "waterDailyNorma": 2000,
              "amount": 250,
              "owner": "662e8d7ca65df5fa1d92229e"
            }
          ],
          "owner": "662e8d7ca65df5fa1d92229e"
        }
      },
      "GetMonthWaterResponse": {
        "type": "array",
        "description": "Information about consumed water for month",
        "example": [
          {
            "_id": "661faad80ea4406ee7d08548",
            "date": "2024-04-07T10:30:45.000Z",
            "waterDailyNorma": 2000,
            "amount": 250,
            "owner": "661fa9617f3e8939e7f9a6fd"
          },
          {
            "_id": "661faac61f6950abe21ab4cf",
            "date": "2024-04-08T10:30:45.000Z",
            "waterDailyNorma": 2000,
            "amount": 250,
            "owner": "661fa9617f3e8939e7f9a6fd"
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Use token (or refreshToken for refreshing)"
      }
    }
  }
}
